@model List<BlogModel>
@using BlogApp.Domain.Enums
@using Microsoft.AspNetCore.Mvc.Rendering
@using Humanizer

@{
    ViewData["Title"] = "Blog Listesi";
}

@section Styles {
    <style>

        body {
            background-color: #f8f9fa; 
        }

        .header {
            position: relative;
            width: 100%;
            aspect-ratio: 5/2;
            overflow: hidden; 
        }

        .header-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
            clip-path: polygon(0 0, 100% 0, 100% 85%, 95% 90%, 90% 80%, 85% 90%, 80% 85%, 75% 95%, 70% 85%, 65% 90%, 60% 85%, 55% 95%, 50% 85%, 45% 90%, 40% 80%, 35% 90%, 30% 85%, 25% 95%, 20% 85%, 15% 90%, 10% 80%, 5% 90%, 0 85%);
        }

        .header-title {
            font-size: 4rem; 
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            color: white;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.6); 
        }

        .blog-container {
            padding: 4rem 2rem;
        }

        .blog {
            margin-bottom: 4rem;
            display: flex;
            flex-direction: row;
            align-items: center;
            background-color: white;
            border-radius: 0.5rem;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
            overflow: hidden; 
        }

        .blog:nth-child(odd) {
            flex-direction: row-reverse;
        }

        .blog-image-wrapper {
            flex: 0 0 50%;
            position: relative;
            perspective: 1000px;
            aspect-ratio: 20/9;
            overflow: hidden; 
        }

        .blog-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
            transition: transform 0.3s ease-in-out;
            transform-style: preserve-3d;
        }

        .blog-category {
            position: absolute;
            top: 0.6rem;
            left: 0.6rem;
            z-index: 10;
            padding: 0.5rem 1rem;
            background-color: #ffc107; 
            color: #212529;
            border-radius: 0.25rem;
            font-size: 0.8rem;
        }

        .blog-content-wrapper {
            flex: 0 0 50%;
            padding: 2rem;
            display: flex;
            flex-direction: column;
            justify-content: center;
            position:relative;
        }

        .blog-info-shared {
            display: flex;
            gap: 1rem;
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
            color: #6c757d; 
        }

        .blog-info-shared-item {
            display: flex;
            align-items: center;
            gap: 0.3rem;
        }

        .blog-info-shared-icon {
            font-size: 1rem;
        }

        .blog-title {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 0.75rem;
            color: #343a40; 
            text-transform: uppercase;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .blog-content {
            font-size: 1rem;
            line-height: 1.5;
            color: #495057; 
            overflow: hidden;
            display: -webkit-box;
            -webkit-line-clamp: 3; 
            -webkit-box-orient: vertical;
        }

        .link-wrapper {
            margin-top: 1rem;
        }

        .link {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
            color: #007bff; 
            font-weight: bold;
            transition: color 0.3s ease-in-out;
        }

        .link-content {
            position: relative;
            font-size: 1rem;
            font-family: 'Times New Roman', Times, serif;
        }

        .link-content::before {
            content: "";
            position: absolute;
            bottom: -0.2rem;
            left: 0;
            width: 100%;
            height: 0.1rem;
            background-color: #007bff;
            transform-origin: left;
            transform: scaleX(0);
            transition: transform 0.3s ease-in-out;
        }

        .link-icon {
            font-size: 1.2rem;
            border-radius: 50%;
            transition: transform 0.3s ease-in-out;
        }

        .link:hover {
            color: #0056b3;
        }

        .link:hover .link-content::before {
            transform: scaleX(1);
        }

        .link:hover .link-icon {
            transform: translateX(0.2rem);
        }

        .filter-container {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 2rem;
        }

        .filter-wrapper {
            display: flex;
            gap: 0.5rem;
        }

        .filter-btn {
            padding: 0.75rem 1.5rem;
            border-radius: 0.3rem;
            background-color: #fd7e14; 
            color: white;
            border: none;
            outline: none;
            transition: background-color 0.3s ease-in-out;
            font-size: 1rem;
            cursor: pointer;
        }

        .filter-btn:hover {
            background-color: #e06807;
        }

        select {
            padding: 0.75rem 1rem;
            border-radius: 0.3rem;
            border: 1px solid #ced4da; 
            outline: none;
            font-size: 1rem;
        }

        .blog-adult-info{
            padding: .4rem;
            background-color:red;
            color:white;
            font-size:1rem;
        }

        
        @@media (max-width: 768px) {
            .blog-container {
                padding: 4rem 1rem 2rem;
            }
        }

        
        @@media (max-width: 1200px) {
            .blog-container {
                padding: 4rem 1.5rem 4rem;
            }

            .blog{
                flex-direction: column;
            }

            .blog-adult-info{
                font-size: .8rem
            }

            .blog:nth-child(odd){
                flex-direction:column;
            }
        }

        @@media (max-width:800px){
            html {
                font-size: smaller;
            }
        }

        
        .fixed-height-image {
            object-fit: cover;
            height: 200px;
        }

        .publish-age {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: black;
            color: white;
            padding: 5px;
            border-radius: 5px;
            font-size: 0.8em;
            z-index: 1;
        }
    </style>
}

<div class="header">
    <img class="header-image" src="/images/background.jpg" alt="Header Image">
    <h1 class="header-title">BLOGS</h1>
</div>
<div class="blog-container">
    <div class="filter-container">
        <div class="filter-wrapper">
            <form asp-action="BlogList" method="get" class="d-flex gap-2">
                <select class="form-control form-control-sm" id="categoryId" name="categoryId">
                    <option value="">Tüm Kategoriler</option>
                    @foreach (var category in ViewBag.Categories)
                    {
                        if (ViewBag.SelectedCategoryId != null && category.Value == ViewBag.SelectedCategoryId.ToString())
                        {
                            <option value="@category.Value" selected>@category.Text</option>
                        }
                        else
                        {
                            <option value="@category.Value">@category.Text</option>
                        }
                    }
                </select>
                <button type="submit" class="filter-btn btn-sm">FİLTRELE</button>
            </form>
        </div>
    </div>
    <hr class="my-4">
    @if (Model != null && Model.Any())
    {
        @foreach (var blog in Model)
        {
            <div class="blog">
                <div class="blog-image-wrapper">
                    @if (!string.IsNullOrEmpty(blog.ImageUrl))
                    {
                        <img class="blog-image" src="@blog.ImageUrl" alt="@blog.Title">
                    }else{
                        <img class="blog-image" src="/images/background.jpg" alt="@blog.Title">
                    }
                    <span class="blog-category"><i class="fas fa-tags"></i> @blog.CategoryName</span>
                </div>
                <div class="blog-content-wrapper">
                    <div>
                        <div class="blog-info-shared">
                            <div class="blog-info-shared-item"><i class="far fa-calendar-alt blog-info-shared-icon"></i><span class="blog-info-shared-content">@blog.PublishDate.ToString("MMMM dd, yyyy")</span></div>
                            <div class="blog-info-shared-item"><i class="fas fa-pen-fancy blog-info-shared-icon"></i><span class="blog-info-shared-content">by @blog.AuthorName</span></div>
                        </div>
                        <h2 class="blog-title">@blog.Title</h2>
                        @if (blog.BlogType == BlogType.Adult)
                        {
                            <p class="blog-content blog-adult-info">Bu YETİŞKİNLERE yönelik bir içeriktir</p>
                        }
                        else
                        {
                            <p class="blog-content">@blog.Content</p>
                        }

                        <div class="link-wrapper">
                            <a href="/Blog/BlogDetails/@blog.Id" class="link">
                                <span class="link-content">READ MORE</span>
                                <i class="fas fa-arrow-right link-icon"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p class="text-center">Henüz hiç blog yayınlanmamış.</p>
    }
</div>

<script>
    const wrappers = document.querySelectorAll('.blog-image-wrapper');
    wrappers.forEach(wrapper => {
        const image = wrapper.querySelector('.blog-image');
        wrapper.addEventListener('mousemove', (e) => {
            const bounds = wrapper.getBoundingClientRect();
            const centerX = bounds.left + bounds.width / 2;
            const centerY = bounds.top + bounds.height / 2;

            const deltaX = e.clientX - centerX;
            const deltaY = e.clientY - centerY;

            const rotateX = (deltaY / bounds.height) * -10; 
            const rotateY = (deltaX / bounds.width) * 10;   

            image.style.transform = `rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
        });
        wrapper.addEventListener('mouseleave', () => {
            image.style.transform = 'rotateX(0deg) rotateY(0deg)';
        });
    })
</script>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    @* <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script> *@
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
}